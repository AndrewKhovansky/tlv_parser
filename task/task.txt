v1.0.1

Write a program in C (!) to do the following:
 
 1) read in an ASCII-hex encoded file as binary data
    (may contain whitespaces like ' ', '\t', '\r' and '\n')
    
 2) the file is assumed to contain a sequence of TLV-encoded structures
    (see encoding.txt)

 3) build internal binary representation of the TLV structures
 
 4) analyze the binary data and dump them to stdout (see examples):
  - raw hex values for tags and length must be annotated with parsed info 
  - nesting levels must be shown by indentation (2 spaces per level)
  (see the provided examples; NOTE - it is not required to replicate the output format exactly as in
  examples)
 
 5) error handling (invalid input data, bad file names, etc.) is expected  

NOTES: 
 - a build system is expected to be used (preferably, SCons)
 - a GCC toolchain is preferred (e.g.  MinGW in Windows)
 - the program must be written in C99 or C11 (relevant compiler settings are to be used)
 - maximal warnings level is expected to be used and there should be no compiler / linker warnings

